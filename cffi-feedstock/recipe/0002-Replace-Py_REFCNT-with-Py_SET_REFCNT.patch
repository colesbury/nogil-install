From 20c09934c41c175e312857e4841bfd224ccd1be0 Mon Sep 17 00:00:00 2001
From: Sam Gross <colesbury@gmail.com>
Date: Mon, 29 Jun 2020 18:46:41 -0400
Subject: [PATCH] Replace Py_REFCNT with Py_SET_REFCNT

---
 c/_cffi_backend.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/c/_cffi_backend.c b/c/_cffi_backend.c
index 7c9cd26..28a26d5 100644
--- a/c/_cffi_backend.c
+++ b/c/_cffi_backend.c
@@ -404,10 +404,10 @@ ctypedescr_dealloc(CTypeDescrObject *ct)
 
     if (ct->ct_unique_key != NULL) {
         /* revive dead object temporarily for DelItem */
-        Py_REFCNT(ct) = 43;
+        Py_SET_REFCNT(ct, 43);
         PyDict_DelItem(unique_cache, ct->ct_unique_key);
         assert(Py_REFCNT(ct) == 42);
-        Py_REFCNT(ct) = 0;
+        Py_SET_REFCNT(ct, 0);
         Py_DECREF(ct->ct_unique_key);
     }
     Py_XDECREF(ct->ct_itemdescr);
@@ -4569,7 +4569,7 @@ static PyObject *get_unique_type(CTypeDescrObject *x,
     /* the 'value' in unique_cache doesn't count as 1, but don't use
        Py_DECREF(x) here because it will confuse debug builds into thinking
        there was an extra DECREF in total. */
-    ((PyObject *)x)->ob_refcnt--;
+    Py_SET_REFCNT(x, Py_REFCNT(x) - 1);
     return (PyObject *)x;
 
  error:
-- 
2.24.1

